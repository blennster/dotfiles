zsh_fish=/usr/share/zsh/plugins/zsh-fish.zsh
if [[ -s "$zsh_fish" ]]; then
	source "$zsh_fish"
fi

LOCAL_BIN="$HOME/.local/bin"

if [[ -d "$LOCAL_BIN" ]] ; then
	export PATH="$LOCAL_BIN:$PATH"
fi

# bun completions
if [[ -s "/home/emil/.bun/_bun" ]] ; then
	source "/home/emil/.bun/_bun"
	# bun
	export BUN_INSTALL="/home/emil/.bun"
	export PATH="$BUN_INSTALL/bin:$PATH"
fi

# zsh parameter completion for the dotnet CLI
_dotnet_zsh_complete() 
{
  local completions=("$(dotnet complete "$words")")

  # If the completion list is empty, just continue with filename selection
  if [ -z "$completions" ]
  then
    _arguments '*::arguments: _normal'
    return
  fi

  # This is not a variable assignment, don't remove spaces!
  _values = "${(ps:\n:)completions}"
}

compdef _dotnet_zsh_complete dotnet

if [[ $(which dotnet) ]] ; then
	compctl -K _dotnet_zsh_complete dotnet
fi

export GOPATH="$HOME/go"
if [[ -d "$GOPATH" ]] ; then
	export PATH="$GOPATH/bin:$PATH"
fi

if [[ -d "$HOME/.cargo/bin" ]] ; then
	export PATH="$HOME/.cargo/bin:$PATH"
fi

if [[ -d "$HOME/.ghcup/bin" ]] ; then
	export PATH="$HOME/.ghcup/bin:$PATH"
fi

if [[ -d "/opt/android-sdk" ]] ; then
	export ANDROID_HOME="/opt/android-sdk"
fi


hx_path=$(builtin command -v helix)
if [[ -n "$hx_path" ]] ; then
	alias hx=helix
fi

if [[ $(which starship) ]] ; then
	prompt off
	eval "$(starship init zsh)"
fi

if [[ $(which fzf) ]] ; then
	source /usr/share/fzf/key-bindings.zsh
	source /usr/share/fzf/completion.zsh
fi

export EDITOR=nvim
export BROWSER=firefox
GPG_TTY=$(tty)
export GPG_TTY
alias lg=lazygit
alias lzd=lazydocker

